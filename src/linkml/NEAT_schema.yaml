id:  https://w3id.org/neat_schema
name: NEAT_schema
description: A schema generated by LinkML for specifying graph ML pipelines in NEAT.
license: https://fsf.org/
prefixes:
  linkml: https://w3id.org/linkml/
imports:
  linkml:types
default_range: string

# #==================================
# # Classes #
# #==================================
# # Params node_type and edge_type attributes could have range: uriorcurie
# # but leaving them to be the default (str) for now.
classes:
  NeatConfiguration:
    description: Root class for the schema.
    tree_root: true
    attributes:
      graph_data:
        description: Configuration for graph data.
        range: GraphDataConfiguration

  GraphDataConfiguration:
    description: Configuration for the graph training and validation data for ML pipeline.
    attributes:
      graph:
        description: Graph configuration for pipeline
        range: EnsmallenRunConfig
      data:
        description: Input data for pipeline.
        range: TrainValidData

  TrainValidData:
    description: Postive and negative training and validation graph data filepaths.
    attributes:
      train_data:
        description: Positive and negative graph data for ML training.
        range: PosNegData
      valid_data:
        description: Positive and negative graph data for ML validation. 
        range: PosNegData

  PosNegData:
    description: File paths for positive an negative edge data.
  # Strings for now. These are actually paths/urls(maybe?)
    attributes:
      pos_edge_filepath:
        description: Positive edges file path.
      neg_edge_filepath:
        description: Negative edges file path.

  EmbeddingsConfig:
    description: Embeddings configuration.
    attributes:
      filename:
        description: Embeddings file name.
      history_filename:
        description: Embeddings history file name.
      node_embeddings_params:
        description: Node embeddings parameters.
        range: NodeEmbeddingsParams
      tsne_filename:
        description: File name for the TSNE plot.

  NodeEmbeddingsParams:
    description: Node embeddings parameters.
    attributes:
      method_name:
        description: Name of the node embedding method.
        range: node_embed_method_enum
      walk_length:
        description: #NEED DESC
        range: integer
      batch_size:
        description: #NEED DESC
        range: integer
      window_size:
        description: #NEED DESC
        range: integer
      return_weight:
        description: #NEED DESC
        range: float
      explore_weight:
        description: #NEED DESC
        range: float
      iterations:
        description: #NEED DESC
        range: integer

  ClassifierContainer:
    description: A container with multiple classifiers in it.
    attributes:
      classifiers:
        description: Classifier details.
        multivalued: true
        inlined_as_list: true
        range: Classifier

  Classifier:
    description: ML classifiers to be trained-tested-validated and applied for predictions.
    attributes:
      classifier_id:
        description: Key to identify the classifier and associated parameters.
      classifier_name:
        description: Name of the classifier.
      classifier_type:
        description: Type of classifier.
      edge_method:
        description: Edge method.
        range: edge_method_enum
      outfile:
        description: Fie path for saving output.
      history_filename:
        description: File name for saving history.
      parameters:
        description: Parameters to be passed for building classifier.
        range: ClassifierParams


  ClassifierParams:
    description: Parameters needed to define a classifier.
    attributes:
      sklearn_params:
        description: Parameters specific to sklearn.
        range: SkLearnParams
      tf_keras_params:
        description: Parameters specific to Tensorflow/Keras
        range: TFKerasParams

  SkLearnParams:
    description: Parameters specific to the SKLearn library.
    attributes:
      random_state:
        description: Random seed.
        range: integer
      max_iter:
        description: Maximum iterations.
        range: integer

  TFKerasParams:
    description: Parameters specific to the Tensorflow Keras library.
    attributes:
      layers_config:
        description: Configuration for instantiating layers for neural networks.
        range: LayerContainer
      loss:
        description: Loss function.
      metrics_config:
        description: Metrics to be calculated after classifier training.
        range: MetricContainer
      optimizer:
        description: Optimizer function to be used during classifier training.
        range: optimizer_enum
      fit_config:
        description: Configuration for model fitting.
        range: ClassifierFitParams

  LayerContainer:
    description: A container of neural network layers.
    attributes:
      layers:
        description: List of layers to be used to build the neural network.
        multivalued: true
        inlined_as_list: true
        range: Layer


  Layer:
    description: Layers for a neural network.
    attributes:
      type:
        description: Type of layer.
      parameters:
        range: LayerParams

  LayerParams:
    description: Parameters for each layer of a neural network.
    attributes:
      units:
        description: #NEED DESC
        range: integer
      activation:
        description: Activation layer type
        range: activation_enum
      rate:
        description: #NEED DESC
        range: float

  MetricContainer:
    description: A container of metrics for a trained classifier.
    attributes:
      metrics:
        description: A list of metrics need to train a classifier.
        multivalued: true
        inlined_as_list: true
        range: Metric
  
  Metric:
    description: Metrics of a trained classifier (model).
    attributes:
      type:
        description: Metric type.
      name: {}
        description: Metric name.
      curve:
        description: Area under curve (AUC) to be calculated.
  
  ClassifierFitParams:
    description: Paramters for fitting a classifier.
    attributes:
      batch_size:
        description: #NEED DESC
        range: integer
      epochs:
        description: Number of epochs to run for training.
        range: integer
      callbacks_list:
        description: List of callbacks.
        range: ClassifierCallbackContainer
  
  ClassifierCallbackContainer:
    description: A container of classifier callbacks.
    attributes:
      callbacks:
        description: Callbacks.
        multivalued: true
        inlined_as_list: true
        range: ClassifierCallback
  
  ClassifierCallback:
    description: Utilities called at certain points during model training.
    attributes:
      type:
        description: Type of callback.
      monitor:
        description: Quantity to be monitored.
      patience:
        description: Number of epochs with no improvement after which training will be stopped.
        range: integer
      min_delta:
        description: Minimum change in the monitored quantity to qualify as an improvement, i.e. an absolute change of less than min_delta, will count as no improvement.
        range: integer
      verbose:
        description: Verbosity mode, 0 or 1. Mode 0 is silent, and mode 1 displays messages when the callback takes an action.
        range: boolean
      mode:
        description: One of {"auto", "min", "max"}. In min mode, training will stop when the quantity monitored has stopped decreasing; in "max" mode it will stop when the quantity monitored has stopped increasing; in "auto" mode, the direction is automatically inferred from the name of the monitored quantity.
        range: classifier_callback_mode_enum

  ApplyTrainedModelsContainer:
    description: A container with multiple classifiers in it.
    attributes:
      models:
        description: Models that need to be used for link prediction.
        multivalued: true
        inlined_as_list: true
        range: ApplyTrainedModel

  ApplyTrainedModel:
    description: Trained model used for prediction.
    attributes:
      model_id:
        description: Key of the model to be used.
      node_types:
        description: Type of nodes.
        range: NodeType
      cutoff:
        description: Cutoff filter.
      outfile:
        description: File path for saving results.

  NodeType:
    description: Source node or Destination node.
    attributes:
      source:
        description: Source node(s).
        multivalued: true
        inlined_as_list: true
      destination:
        description: Destination node(s).
        multivalued: true
        inlined_as_list: true

  Upload:
    description: Configuration for uploading to Amazon S3 bucket.
    attributes:
      s3_bucket:
        description: Bucket name.
      s3_bucket_dir:
        description: Bucket path.
      extra_args:
        description: Extra keyword arguments (**kwargs).
        multivalued: true
        inlined_as_list: false

  Target:
    description: Path for output to be saved.
    attributes:
      target_path:
        description: File path for saving results.

  EnsmallenRunConfig:
    description: All params used by ensmallen's csv_reader
    attributes:
      node_type_path:
      node_type_list_separator:
      node_types_column_number:
        range: integer
      node_types_column:
      node_types_ids_column_number:
        range: integer
      node_types_ids_column:
      node_types_number:
        range: integer
      numeric_node_type_ids:
        range: boolean
      minimum_node_type_id:
        range: integer
      node_type_list_header:
        range: boolean
      node_type_list_rows_to_skip:
        range: integer
      node_type_list_is_correct:
        range: boolean
      node_type_list_max_rows_number:
        range: integer
      node_type_list_comment_symbol:
      load_node_type_list_in_parallel:
        range: boolean
      node_path:
      node_list_separator:
      node_list_header:
        range: boolean
      node_list_rows_to_skip:
        range: integer
      node_list_is_correct:
        range: boolean
      node_list_max_rows_number:
        range: integer
      node_list_comment_symbol:
      default_node_type:
      nodes_column_number:
        range: integer
      nodes_column:
      node_types_separator:
      node_list_node_types_column_number:
        range: integer
      node_list_node_types_column:
      node_ids_column:
      node_ids_column_number:
        range: integer
      nodes_number:
          range: integer
      minimum_node_id:
        range: integer
      numeric_node_ids:
        range: boolean
      node_list_numeric_node_type_ids:
        range: boolean
      skip_node_types_if_unavailable:
        range: boolean
      load_node_list_in_parallel:
        range: boolean
      edge_type_path:
      edge_types_column_number:
        range: integer
      edge_types_column:
      edge_types_ids_column_number:
        range: integer
      edge_types_ids_column:
      edge_types_number:
        range: integer
      numeric_edge_type_ids:
        range: boolean
      minimum_edge_type_id:
        range: integer
      edge_type_list_separator:
      edge_type_list_header:
        range: boolean
      edge_type_list_rows_to_skip:
        range: integer
      edge_type_list_is_correct:
        range: boolean
      edge_type_list_max_rows_number:
        range: integer
      edge_type_list_comment_symbol:
      load_edge_type_list_in_parallel:
        range: boolean
      edge_path:
      edge_list_separator:
      edge_list_header:
        range: boolean
      edge_list_rows_to_skip:
        range: integer
      sources_column_number:
        range: integer
      sources_column:
      destinations_column_number:
        range: integer
      destinations_column:
      edge_list_edge_types_column_number:
        range: integer
      edge_list_edge_types_column:
      default_edge_type:
      weights_column_number:
        range: integer
      weights_column:
      default_weight:
        range: float
      edge_ids_column:
      edge_ids_column_number:
        range: integer
      edge_list_numeric_edge_type_ids:
        range: boolean
      edge_list_numeric_node_ids:
        range: boolean
      skip_weights_if_unavailable:
        range: boolean
      skip_edge_types_if_unavailable:
        range: boolean
      edge_list_is_complete:
        range: boolean
      edge_list_may_contain_duplicates:
        range: boolean
      edge_list_is_sorted:
        range: boolean
      edge_list_is_correct:
        range: boolean
      edge_list_max_rows_number:
        range: integer
      edge_list_comment_symbol:
      edges_number:
        range: integer
      load_edge_list_in_parallel:
        range: boolean
      verbose:
        range: boolean
      may_have_singletons:
        range: boolean
      may_have_singleton_with_selfloops:
        range: boolean
      directed:
        range: boolean
      name: {}


#==================================
# Enums                           #
#==================================
enums:
  node_embed_method_enum:
    permissible_values:
      SkipGram:
        description: ##NEED DESCRIPTION
      CBOW:
        description: ##NEED DESCRIPTION
      GloVe:
        description: ##NEED DESCRIPTION
      Siamese:
        description: ##NEED DESCRIPTION
      TransE:
        description: ##NEED DESCRIPTION
      SimplE:
        description: ##NEED DESCRIPTION
      TransH:
        description: ##NEED DESCRIPTION
      TransR:
        description: ##NEED DESCRIPTION

  edge_method_enum:
    permissible_values:
      Average:
        description: ##NEED DESCRIPTION
      Hadamard:
        description: ##NEED DESCRIPTION
      Sum:
        description: ##NEED DESCRIPTION
      L1:
        description: ##NEED DESCRIPTION
      L2:
        description: ##NEED DESCRIPTION
      AbsoluteL1:
        description: ##NEED DESCRIPTION

  activation_enum:
    permissible_values:
      linear:
        description: Linear function.
      relu:
        description: Rectified Linear Unit (ReLU)
      sigmoid:
        description: Sigmoid activation function.
      tanh:
        description: The tanh function.
      softmax:
        description: Softmax (or softargmax) function.

  optimizer_enum:
    description: Optimizers that can be implemented in the neural network.
    permissible_values:
      adagrad:
        description: Optimizer that implements the Adagrad algorithm.
      adam:
        description: Optimizer that implements the Adam algorithm.
      adamax:
        description: Optimizer that implements the Adamax algorithm.
      nadam:
        description: Optimizer that implements the NAdam algorithm.
      sgd:
        description: Stochastic gradient descent (with momentum) optimizer.

  classifier_callback_mode_enum:
    description: Callback modes while fitting a classifier.
    permissible_values:
      auto:
        description: In 'auto' mode, the direction is automatically inferred from the name of the monitored quantity.
      min:
        description: In 'min' mode, the learning rate will be reduced when the quantity monitored has stopped decreasing.
      max:
        description: In 'max' mode, the learning rate will be reduced when the quantity monitored has stopped increasing


  
